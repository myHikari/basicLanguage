"""
Python3 集合
集合（set）是一个无序的不重复元素序列。
集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。
可以使用大括号 { } 创建集合，元素之间用逗号 , 分隔， 或者也可以使用 set() 函数创建集合。

创建格式：
parame = {value01,value02,...}
或者
set(value)


集合的基本操作
1、添加元素
语法格式如下：
s.add( x )			将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。


2、移除元素
语法格式如下：
s.remove( x )		将元素 x 从集合 s 中移除，如果元素不存在，则会发生错误。

此外还有一个方法也是移除集合中的元素，且如果元素不存在，不会发生错误。格式如下所示：
s.discard( x )

也可以设置随机删除集合中的一个元素，语法格式如下：
s.pop() 


3、计算集合元素个数
语法格式如下：
len(s)			计算集合 s 元素个数。


4、清空集合
语法格式如下：
s.clear()		清空集合 s。


5、判断元素是否在集合中存在
语法格式如下：
x in s		判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False。

"""


""" 
集合内置方法完整列表
方法 							描述
add()							为集合添加元素
clear()							移除集合中的所有元素
copy()							拷贝一个集合
difference()					返回多个集合的差集
difference_update()				移除集合中的元素，该元素在指定的集合也存在。
discard()						删除集合中指定的元素
intersection()					返回集合的交集
intersection_update()			返回集合的交集。
isdisjoint()					判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。
issubset()						判断指定集合是否为该方法参数集合的子集。
issuperset()					判断该方法的参数集合是否为指定集合的子集
pop()							随机移除元素
remove()						移除指定元素
symmetric_difference()			返回两个集合中不重复的元素集合。
symmetric_difference_update()	移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。
union()							返回两个集合的并集
update()						给集合添加元素

"""


















